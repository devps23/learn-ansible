- name: backend
  hosts: all
  become: yes
  tasks:
    - name: disable nodejs
      ansible.builtin.shell: dnf module disable nodejs -y

    - name: enable nodejs
      ansible.builtin.shell: dnf module enable nodejs:20 -y

    - name: Install nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: installed

    - name: Copy backend service
      ansible.builtin.copy:
        src: backend.conf
        dest: /etc/systemd/system/backend.service

    - name: Add application user
      ansible.builtin.user:
        name: expense

    - name: clean the code
      ansible.builtin.file:
        path: /app
        state: absent

    - name: Make a directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download backend zip
      ansible.builtin.get_url:
        url: https://expense-artifacts.s3.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip

    - name: unarchive backend zip
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes

    - name: Install npm dependencies
      community.general.npm:
          name: npm
          path: npm install
          state: latest

    - name: Install mysql
      ansible.builtin.dnf:
        name: mysql
        state: latest

    - name: Install PyMySQL package
      ansible.builtin.pip:
        name: PyMySQL
        state: latest

    - name: Install cryptography package
      ansible.builtin.pip:
        name: cryptography
        state: latest

    - name: Load Schema
      mysql_db:
        name: all
        login_user: root
        login_password: ExpenseApp@1
        login_host: 172.31.25.56
        target: /app/schema/backend.sql
        state: import



    - name: Load the service
      ansible.builtin.systemd_service:
         name: backend
         state: restarted
         enabled: yes
         daemon_reload: true






